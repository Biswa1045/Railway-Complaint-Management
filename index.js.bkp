function registerUser() {
  var id = "US0001";
  var username = document.getElementById("user_name");
  var email = document.getElementById("user_email");
  var password = document.getElementById("user_password");
  var phone = document.getElementById("user_phone");

  app.post("/register", (req, res) => {
    var sql =
      "INSERT INTO user_table (user_id, user_name, user_email,  user_password, user_phone ) VALUES (?, ?, ? ,? ,?)";
    const values = [
      id.toString(),
      username.toString(),
      email.toString(),
      password.toString(),
      phone.toString(),
    ];
    connection.query(sql, values, function (err, result) {
      if (err) throw err;
      console.log("1 record inserted");
    });
    // disconnect from database
    connection.end((err) => {
      if (err) {
        console.error("Error closing connection:", err);
        return;
      }
      console.log("Databse Connection closed.");
    });
  });

  // // Start the server
  // app.listen(3000, () => {
  //   console.log('Server is running on port 3000');
  // });
}
function signin() {
  app.post('/signin', (req, res) => {
    //  const { email, password } = req.body;
      var email = req.body.email_signin;
      var password = req.password.password_signin;

      // Retrieve user from the database
      connection.query(
        'SELECT * FROM user_table WHERE user_email = ?',
        [email],
        (error, results) => {
          if (error) {
            console.error(error);
            return res.status(500).json({ error: 'Internal server error' });
          }

          if (results.length === 0) {
            return res.status(401).json({ error: 'Invalid email or password' });
          }

          const user = results[0];

          // Compare passwords
          bcrypt.compare(password, user.password, (err, isMatch) => {
            if (err) {
              console.error(err);
              return res.status(500).json({ error: 'Internal server error' });
            }

            if (!isMatch) {
              return res.status(401).json({ error: 'Invalid email or password' });
            }

            // User is authenticated
            return res.json({ message: 'User signed in successfully' });
          });
        }
      );
    });
}